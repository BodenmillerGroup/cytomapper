name: build-checks-devel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    container: rocker/r-ver:devel

    steps:
      - uses: actions/checkout@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}        
      
      - name: Install system requirements
        run: |
          apt-get update 
          apt-get install -y --no-install-recommends apt-utils 
          apt-get install -y --no-install-recommends zlib1g-dev libfftw3-dev libxml2-dev libpng-dev libtiff-dev libfontconfig1-dev libcurl4-gnutls-dev libcairo2-dev libssl-dev libxt-dev curl
          apt-get clean
          rm -rf /var/lib/apt/ilists/*

      - name: Install dependencies
        run: |
         install.packages("BiocManager")
         BiocManager::install(version = "devel", update = TRUE, ask = FALSE) 
         remotes::install_deps(dependencies = TRUE, repos = BiocManager::repositories(), Ncpu = 2L)
        shell: Rscript {0}
        
      - name: Find PhantomJS path
        id: phantomjs
        run: |
          echo "::set-output name=path::$(Rscript -e 'cat(shinytest:::phantom_paths()[[1]])')"
      - name: Cache PhantomJS
        uses: actions/cache@v2
        with:
          path: ${{ steps.phantomjs.outputs.path }}
          key: ${{ matrix.config.os }}-phantomjs
          restore-keys: ${{ matrix.config.os }}-phantomjs
      - name: Install PhantomJS
        run: >
          Rscript
          -e "if (!shinytest::dependenciesInstalled()) shinytest::installDependencies()"
        
      - name: Check
        run: |
          install.packages("rcmdcheck")          
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
        
      - name: BiocCheck
        run: |
          BiocManager::install("BiocCheck")
          BiocCheck::BiocCheck(".")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
